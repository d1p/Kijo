name: Release  App
permissions:
  contents: write
on:
  push:
    tags:
      - 'v*.*.*'  # Trigger workflow only for version tags
jobs:
  release:
    name: Release Tauri App
    strategy:
      matrix:
        os: [macos-latest, windows-latest]  # Add both Windows and macOS
        include:
          - os: macos-latest
            output_path: ./src-tauri/target/release/bundle/macos/kijo.dmg
            asset_name: yourapp-macos.dmg
            content_type: application/x-diskcopy
          - os: windows-latest
            output_path: ./src-tauri/target/release/bundle/msi/kijo.msi
            asset_name: kijo.msi
            content_type: application/x-msi

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22.x'  # Use Node.js v22

    - name: Set up pnpm
      run: npm install -g pnpm

    - name: install Rust stable
      uses: dtolnay/rust-toolchain@stable
      with:
        # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
        targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

    - name: Install Tauri dependencies
      run: pnpm install

    - uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
        releaseName: 'App v__VERSION__'
        releaseBody: 'See the assets to download this version and install.'
        releaseDraft: true
        prerelease: false
        args: ${{ matrix.args }}